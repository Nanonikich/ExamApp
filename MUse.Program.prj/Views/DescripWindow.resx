<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>